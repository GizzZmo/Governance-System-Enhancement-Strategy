name: CI and Deployment for Sui Move Project

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    name: Build and Test (Rust 1.86.0, Sui testnet-v1.48.1)
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Code
      uses: actions/checkout@v3

    - name: Setup Rust toolchain (Pin to 1.86.0)
      uses: actions-rs/toolchain@v1
      with:
        toolchain: "1.86.0" # Pinning to an older stable Rust version
        profile: minimal
        override: true

    - name: Install Sui Binaries using Cargo (Pinned Testnet Version)
      run: |
        set -e 
        set -x 

        echo "Installing Sui binaries using cargo with pinned tag testnet-v1.48.1..."
        SUI_RELEASE_TAG="testnet-v1.48.1" # Using a specific testnet tag
        
        cargo install --locked --git https://github.com/MystenLabs/sui.git --tag "$SUI_RELEASE_TAG" sui
        
        INSTALL_EXIT_CODE=$?
        if [ $INSTALL_EXIT_CODE -ne 0 ]; then
          echo "Error: cargo install for Sui (tag $SUI_RELEASE_TAG) failed with exit code $INSTALL_EXIT_CODE."
          echo "This might be due to the tag not existing, being mistyped, or an incompatibility with the current Rust version."
          echo "Please ensure SUI_RELEASE_TAG is a valid tag from https://github.com/MystenLabs/sui/releases"
          exit $INSTALL_EXIT_CODE
        fi
        echo "Successfully installed Sui from tag $SUI_RELEASE_TAG."

        echo "$HOME/.cargo/bin" >> $GITHUB_PATH
        set +x
      shell: bash

    - name: Verify Installation
      run: |
        rustc --version # To confirm Rust version
        cargo --version   # To confirm Cargo version
        sui --version
        sui move --version
      shell: bash

    - name: Build Project
      env:
        RUST_BACKTRACE: 1 # Enable full backtrace for panics
      run: |
        sui move build --path . 
      shell: bash

    - name: Run Tests
      env:
        RUST_BACKTRACE: 1 # Enable full backtrace for panics
      run: |
        sui move test --path .
      shell: bash

  deploy_to_testnet:
    name: Deploy to Testnet (Rust 1.86.0, Sui testnet-v1.48.1)
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'

    steps:
    - name: Checkout Code
      uses: actions/checkout@v3

    - name: Setup Rust toolchain (Pin to 1.86.0)
      uses: actions-rs/toolchain@v1
      with:
        toolchain: "1.86.0" # Pinning to an older stable Rust version
        profile: minimal
        override: true

    - name: Install Sui Binaries using Cargo (Pinned Testnet Version)
      run: |
        set -e
        set -x
        echo "Installing Sui binaries using cargo with pinned tag testnet-v1.48.1 for deployment..."
        # Ensure this tag MATCHES the tag used in the 'build' job for consistency.
        SUI_RELEASE_TAG="testnet-v1.48.1" # Using a specific testnet tag

        cargo install --locked --git https://github.com/MystenLabs/sui.git --tag "$SUI_RELEASE_TAG" sui
        
        INSTALL_EXIT_CODE=$?
        if [ $INSTALL_EXIT_CODE -ne 0 ]; then 
          echo "Error: cargo install for Sui (tag $SUI_RELEASE_TAG) failed with exit code $INSTALL_EXIT_CODE."
          exit $INSTALL_EXIT_CODE
        fi
        echo "Successfully installed Sui from tag $SUI_RELEASE_TAG for deployment."

        echo "$HOME/.cargo/bin" >> $GITHUB_PATH
        set +x
      shell: bash
      
    - name: Verify Rust Version in Deploy Job
      run: |
        rustc --version
        sui --version # Also verify Sui version consistency here
      shell: bash

    - name: Configure Sui Client for Deployment
      env:
        SUI_TESTNET_RPC_URL: ${{ secrets.SUI_TESTNET_RPC_URL }}
        SUI_DEPLOYER_PRIVATE_KEY_BASE64: ${{ secrets.SUI_DEPLOYER_PRIVATE_KEY_BASE64 }}
        SUI_DEPLOYER_ALIAS: "testnet-deployer-ci"
      run: |
        set -e
        set -x

        echo "Setting up Sui client for Testnet deployment..."
        mkdir -p $HOME/.sui/sui_config

        if [ -n "$SUI_TESTNET_RPC_URL" ]; then
          sui client new-env --alias ci-testnet --rpc "$SUI_TESTNET_RPC_URL"
          sui client switch --env ci-testnet
          echo "Switched to ci-testnet environment with RPC: $SUI_TESTNET_RPC_URL"
        else
          echo "Warning: SUI_TESTNET_RPC_URL secret not set. Attempting to use default 'testnet' environment."
          sui client switch --env testnet || (echo "Error: Failed to switch to default 'testnet' env and no RPC URL provided." && exit 1)
        fi

        echo "Importing private key..."
        if [ -z "$SUI_DEPLOYER_PRIVATE_KEY_BASE64" ]; then
          echo "Error: SUI_DEPLOYER_PRIVATE_KEY_BASE64 secret not set."
          exit 1
        fi

        sui client remove-alias "$SUI_DEPLOYER_ALIAS" || echo "Alias $SUI_DEPLOYER_ALIAS did not exist or could not be removed. Continuing..."
        echo "$SUI_DEPLOYER_PRIVATE_KEY_BASE64" | base64 --decode | sui client import-private-key --alias "$SUI_DEPLOYER_ALIAS"
        sui client switch --address "$SUI_DEPLOYER_ALIAS"
        echo "Switched active address to $SUI_DEPLOYER_ALIAS"

        echo "Verifying client configuration..."
        sui client active-env
        sui client active-address
        sui client gas --json
        echo "Sui client setup complete."
        set +x
      shell: bash

    - name: Deploy Contracts to Testnet
      env:
        RUST_BACKTRACE: 1 
        SUI_TARGET_RPC_URL: ${{ secrets.SUI_TESTNET_RPC_URL }} 
        SUI_DEPLOYER_ADDRESS_FOR_SCRIPT: ${{ env.SUI_DEPLOYER_ALIAS }} 
        SUI_GAS_COIN_ID_FOR_SCRIPT: ${{ secrets.SUI_GAS_OBJECT_ID_TESTNET }}
      run: |
        chmod +x ./scripts/deploy.sh
        echo "Executing deploy.sh script..."
        ./scripts/deploy.sh
      shell: bash
