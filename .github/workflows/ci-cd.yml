name: CI and Deployment for Sui Move Project

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    name: Build and Test
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Code
      uses: actions/checkout@v3

    - name: Setup Rust toolchain
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable # Or a specific Rust version compatible with Sui
        profile: minimal
        override: true

    - name: Install Sui Binaries using Cargo (Pinned Version)
      run: |
        set -e # Exit immediately if a command exits with a non-zero status
        set -x # Echo each command before executing

        echo "Installing Sui binaries using cargo with a pinned testnet tag..."
        # IMPORTANT: Replace 'testnet-v1.25.0' with the latest suitable testnet release tag
        # from https://github.com/MystenLabs/sui/releases
        SUI_RELEASE_TAG="testnet-v1.25.0" # <--- ### USER ACTION REQUIRED: UPDATE THIS TAG ###
        
        cargo install --locked --git https://github.com/MystenLabs/sui.git --tag "$SUI_RELEASE_TAG" sui
        
        INSTALL_EXIT_CODE=$?
        if [ $INSTALL_EXIT_CODE -ne 0 ]; then
          echo "Error: cargo install for Sui (tag $SUI_RELEASE_TAG) failed with exit code $INSTALL_EXIT_CODE."
          exit $INSTALL_EXIT_CODE
        fi
        echo "Successfully installed Sui from tag $SUI_RELEASE_TAG."

        # Add cargo's bin directory to GITHUB_PATH
        echo "$HOME/.cargo/bin" >> $GITHUB_PATH
        set +x
      shell: bash

    - name: Verify Installation
      run: |
        sui --version
        sui move --version # Correct way to check Move CLI version via Sui CLI
      shell: bash

    - name: Build Project (Also Fetches Dependencies)
      run: |
        sui move build --path .
      shell: bash

    - name: Run Tests
      run: |
        sui move test --path .
      shell: bash

  deploy_to_testnet:
    name: Deploy to Testnet
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'

    steps:
    - name: Checkout Code
      uses: actions/checkout@v3

    - name: Setup Rust toolchain
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        profile: minimal
        override: true

    - name: Install Sui Binaries using Cargo (Pinned Version)
      run: |
        set -e
        set -x
        echo "Installing Sui binaries using cargo with a pinned testnet tag for deployment..."
        # IMPORTANT: Replace 'testnet-v1.25.0' with the latest suitable testnet release tag
        # from https://github.com/MystenLabs/sui/releases
        # Ensure this tag MATCHES the tag used in the 'build' job for consistency.
        SUI_RELEASE_TAG="testnet-v1.25.0" # <--- ### USER ACTION REQUIRED: UPDATE THIS TAG ###

        cargo install --locked --git https://github.com/MystenLabs/sui.git --tag "$SUI_RELEASE_TAG" sui
        
        INSTALL_EXIT_CODE=$?
        if [ $INSTALL_EXIT_CODE -ne 0 ]; then 
          echo "Error: cargo install for Sui (tag $SUI_RELEASE_TAG) failed with exit code $INSTALL_EXIT_CODE."
          exit $INSTALL_EXIT_CODE
        fi
        echo "Successfully installed Sui from tag $SUI_RELEASE_TAG for deployment."

        echo "$HOME/.cargo/bin" >> $GITHUB_PATH
        set +x
      shell: bash

    - name: Configure Sui Client for Deployment
      env:
        SUI_TESTNET_RPC_URL: ${{ secrets.SUI_TESTNET_RPC_URL }}
        SUI_DEPLOYER_PRIVATE_KEY_BASE64: ${{ secrets.SUI_DEPLOYER_PRIVATE_KEY_BASE64 }}
        SUI_DEPLOYER_ALIAS: "testnet-deployer-ci"
      run: |
        set -e
        set -x

        echo "Setting up Sui client for Testnet deployment..."
        mkdir -p $HOME/.sui/sui_config

        if [ -n "$SUI_TESTNET_RPC_URL" ]; then
          sui client new-env --alias ci-testnet --rpc "$SUI_TESTNET_RPC_URL"
          sui client switch --env ci-testnet
          echo "Switched to ci-testnet environment with RPC: $SUI_TESTNET_RPC_URL"
        else
          # Fallback to trying the default 'testnet' env if RPC URL secret is not provided
          echo "Warning: SUI_TESTNET_RPC_URL secret not set. Attempting to use default 'testnet' environment."
          sui client switch --env testnet || (echo "Error: Failed to switch to default 'testnet' env and no RPC URL provided." && exit 1)
        fi

        echo "Importing private key..."
        if [ -z "$SUI_DEPLOYER_PRIVATE_KEY_BASE64" ]; then
          echo "Error: SUI_DEPLOYER_PRIVATE_KEY_BASE64 secret not set."
          exit 1
        fi

        # Attempt to remove alias first to avoid error if it already exists from a previous run
        sui client remove-alias "$SUI_DEPLOYER_ALIAS" || echo "Alias $SUI_DEPLOYER_ALIAS did not exist or could not be removed. Continuing..."

        # Import the private key
        echo "$SUI_DEPLOYER_PRIVATE_KEY_BASE64" | base64 --decode | sui client import-private-key --alias "$SUI_DEPLOYER_ALIAS"

        # Switch active address to the newly imported alias
        sui client switch --address "$SUI_DEPLOYER_ALIAS"
        echo "Switched active address to $SUI_DEPLOYER_ALIAS"

        echo "Verifying client configuration..."
        sui client active-env
        sui client active-address
        sui client gas --json # Check if the address has gas coins
        echo "Sui client setup complete."
        set +x
      shell: bash

    - name: Deploy Contracts to Testnet
      env:
        # These ENVs might be used by your deploy.sh script if it expects them
        SUI_TARGET_RPC_URL: ${{ secrets.SUI_TESTNET_RPC_URL }} 
        SUI_DEPLOYER_ADDRESS_FOR_SCRIPT: ${{ env.SUI_DEPLOYER_ALIAS }} # Or the actual address if script needs it
        SUI_GAS_COIN_ID_FOR_SCRIPT: ${{ secrets.SUI_GAS_OBJECT_ID_TESTNET }}
      run: |
        chmod +x ./scripts/deploy.sh
        echo "Executing deploy.sh script..."
        # If your deploy.sh script doesn't internally handle client setup (like active address),
        # ensure the client is correctly configured before this step from "Configure Sui Client" step.
        ./scripts/deploy.sh
      shell: bash
